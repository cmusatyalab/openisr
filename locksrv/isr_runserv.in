#!!!PERLPATH!!

######################################################
# isr_runserv - Wrapper script for ISR server commands
######################################################

#
#                     Internet Suspend/Resume (R)
#           A system for capture and transport of PC state
#
#            Copyright (c) 2007, Carnegie Mellon University
#
# This software is distributed under the terms of the Eclipse Public
# License, Version 1.0 which can be found in the file named LICENSE.Eclipse.
# ANY USE, REPRODUCTION OR DISTRIBUTION OF THIS SOFTWARE CONSTITUTES
# RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT
#

use strict;
use Getopt::Std;
use constant {
    LIBDIR => "!!LIBDIR!!",
    SHAREDIR => "!!SHAREDIR!!",
    SYSCONFDIR => "!!SYSCONFDIR!!",
    STATEDIR => "!!STATEDIR!!",
    RCS_REVISION => "!!REVISION!!",
};
use lib SHAREDIR;
use Server;
$| = 1; # Autoflush output on every print statement

my $cmd = shift;
# Sanitize the specified subcommand: we only allow letters
$cmd =~ tr/a-zA-Z//cd;
my $cmdpath = SHAREDIR . "/srv_$cmd.pm";

usage()
    if $cmd eq "";
if (!-e $cmdpath) {
    print STDERR "No such subcommand \"$cmd\"\n";
    usage();
}

$0 .= " $cmd";
do $cmdpath;
errexit("Couldn't run subcommand \"$cmd\": $@")
    if $@;
errexit("Couldn't read subcommand \"$cmd\": $!");


sub usage {
    my $progname = $0;
    
    $progname =~ s|.*/||;
    print STDERR "$progname revision " . RCS_REVISION . "\n";
    print STDERR "Usage: $0 <subcommand> <args>\n";
    print STDERR "Available subcommands:\n";
    opendir(DIR, SHAREDIR)
        or unix_errexit("Couldn't read " . SHAREDIR);
    foreach $cmd (sort(readdir(DIR))) {
	next if $cmd !~ /^srv_([a-z]+)\.pm$/; 
	print STDERR "\t$1\n";
    }
    closedir(DIR);
    exit 1;
}
