/*
 * libisrcrypto - cryptographic library for the OpenISR (R) system
 *
 * Copyright (C) 2008-2009 Carnegie Mellon University
 *
 * This library is free software; you can redistribute it and/or modify it
 * under the terms of version 2.1 of the GNU Lesser General Public License as
 * published by the Free Software Foundation.  A copy of the GNU Lesser General
 * Public License should have been distributed along with this library in the
 * file LICENSE.LGPL.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
 * for more details.
 */

const uint8_t compressible_plain[] = {
	0x7f, 0x45, 0x4c, 0x46, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84,
	0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x28, 0x00, 0x1c, 0x00, 0x19, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x16, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x17, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x56, 0x83, 0xec, 0x18, 0x8b, 0x74, 0x24, 0x20,
	0x8b, 0x46, 0x0c, 0x85, 0xc0, 0x74, 0x29, 0x8b, 0x06, 0x8b, 0x4c,
	0x24, 0x28, 0x8b, 0x54, 0x24, 0x24, 0x89, 0x34, 0x24, 0x89, 0x4c,
	0x24, 0x08, 0x89, 0x54, 0x24, 0x04, 0xff, 0x50, 0x0c, 0xc7, 0x46,
	0x0c, 0x00, 0x00, 0x00, 0x00, 0x83, 0xc4, 0x18, 0x5e, 0xc3, 0x90,
	0x8d, 0x74, 0x26, 0x00, 0x8b, 0x4e, 0x08, 0x8b, 0x06, 0x89, 0x4c,
	0x24, 0x08, 0x8b, 0x56, 0x04, 0x89, 0x34, 0x24, 0x89, 0x54, 0x24,
	0x04, 0xff, 0x50, 0x04, 0x85, 0xc0, 0x75, 0xdc, 0xc7, 0x46, 0x0c,
	0x01, 0x00, 0x00, 0x00, 0xeb, 0xb4, 0x90, 0x8d, 0x74, 0x26, 0x00,
	0x8b, 0x54, 0x24, 0x04, 0x31, 0xc0, 0xe8, 0xfc, 0xff, 0xff, 0xff,
	0x81, 0xc1, 0x02, 0x00, 0x00, 0x00, 0x85, 0xd2, 0x75, 0x09, 0x8b,
	0x81, 0x00, 0x00, 0x00, 0x00, 0x8b, 0x40, 0x18, 0xf3, 0xc3, 0x83,
	0xec, 0x1c, 0x89, 0x74, 0x24, 0x18, 0x8b, 0x74, 0x24, 0x20, 0x89,
	0x5c, 0x24, 0x14, 0xe8, 0xfc, 0xff, 0xff, 0xff, 0x81, 0xc3, 0x02,
	0x00, 0x00, 0x00, 0x8b, 0x16, 0x89, 0x34, 0x24, 0xff, 0x52, 0x10,
	0x8b, 0x46, 0x04, 0x89, 0x04, 0x24, 0xe8, 0xfc, 0xff, 0xff, 0xff,
	0x89, 0x74, 0x24, 0x04, 0xc7, 0x04, 0x24, 0x14, 0x00, 0x00, 0x00,
	0xe8, 0xfc, 0xff, 0xff, 0xff, 0x8b, 0x5c, 0x24, 0x14, 0x8b, 0x74,
	0x24, 0x18, 0x83, 0xc4, 0x1c, 0xc3, 0x8d, 0xb4, 0x26, 0x00, 0x00,
	0x00, 0x00, 0x83, 0xec, 0x1c, 0x89, 0x5c, 0x24, 0x14, 0xe8, 0xfc,
	0xff, 0xff, 0xff, 0x81, 0xc3, 0x02, 0x00, 0x00, 0x00, 0x89, 0x74,
	0x24, 0x18, 0xc7, 0x04, 0x24, 0x14, 0x00, 0x00, 0x00, 0xe8, 0xfc,
	0xff, 0xff, 0xff, 0x8b, 0x4c, 0x24, 0x20, 0x85, 0xc9, 0x89, 0xc6,
	0x75, 0x24, 0x8b, 0x83, 0x00, 0x00, 0x0d, 0x0a
};

const uint8_t incompressible_plain[] = {
	0x41, 0xbc, 0x59, 0x08, 0xa3, 0xc7, 0xd2, 0xfe, 0x9a, 0x0a, 0x0f,
	0x5c, 0xfd, 0x3a, 0xe4, 0xa4, 0x83, 0x66, 0x7b, 0x96, 0xd2, 0x6d,
	0x88, 0x68, 0xd3, 0xf6, 0x1d, 0x59, 0x92, 0xe9, 0xa0, 0x8b, 0x92,
	0xb9, 0xf5, 0x1a, 0x3f, 0x3c, 0x07, 0xba, 0x1a, 0x02, 0x24, 0xf8,
	0xaf, 0x6a, 0x61, 0x73, 0x2d, 0x65, 0x7a, 0xfd, 0x43, 0x15, 0xe9,
	0xea, 0x2e, 0xaf, 0xe6, 0x6e, 0x92, 0xf0, 0xb4, 0x0e, 0x60, 0x14,
	0xd7, 0xde, 0xd9, 0x6b, 0x7f, 0x88, 0x85, 0x99, 0x37, 0xe0, 0x93,
	0x2a, 0x46, 0x7b, 0xd1, 0xc7, 0x00, 0xb5, 0xa3, 0x3d, 0xad, 0xc3,
	0x0f, 0x1c, 0xda, 0x42, 0x06, 0x09, 0x2b, 0x79, 0xca, 0x9e, 0xa1,
	0xea, 0xc7, 0x1f, 0x0b, 0x3c, 0x76, 0x01, 0xc5, 0x1f, 0x73, 0x8d,
	0xdd, 0x37, 0x49, 0x62, 0xdb, 0x44, 0xe5, 0x92, 0x83, 0xf5, 0x64,
	0x14, 0x1b, 0xcc, 0xc9, 0xeb, 0x00, 0x4b, 0x83, 0xd6, 0xf8, 0xe3,
	0xa9, 0xc8, 0x86, 0x05, 0x53, 0x85, 0xc4, 0xf1, 0x02, 0x62, 0x78,
	0xb8, 0x8d, 0xeb, 0x8c, 0x70, 0x13, 0x3d, 0xbb, 0x33, 0xf4, 0x86,
	0xe0, 0xe7, 0x01, 0xc3, 0x07, 0x01, 0x34, 0xe0, 0x51, 0x24, 0x1b,
	0x56, 0x2c, 0x0a, 0x47, 0x63, 0xb6, 0xe5, 0xbf, 0x3a, 0x8a, 0x74,
	0x35, 0x69, 0xcd, 0x03, 0x8b, 0xc6, 0x2d, 0x64, 0x51, 0x7c, 0xfb,
	0x4c, 0x0c, 0x23, 0xf1, 0x3d, 0xd8, 0x08, 0x52, 0x5a, 0x32, 0xde,
	0x45, 0x2c, 0xb4, 0x23, 0x4f, 0xe8, 0x0c, 0x06, 0xd3, 0xc7, 0x44,
	0x48, 0xc2, 0xec, 0x05, 0x2b, 0x87, 0x63, 0x0e, 0xdc, 0x3f, 0xa1,
	0x5e, 0x95, 0x55, 0xd4, 0x3e, 0xfa, 0xbc, 0xad, 0x56, 0x1f, 0x27,
	0x16, 0x7d, 0x29, 0xa3, 0xb9, 0xc9, 0x39, 0x0f, 0x33, 0x26, 0xfd,
	0x0a, 0x2c, 0xf9, 0xd7, 0xfd, 0x65, 0x81, 0x00, 0xa3, 0x14, 0x21,
	0x74, 0xdb, 0xba
};

const uint8_t compressible_zlib6[] = {
	0x78, 0x9c, 0xab, 0x77, 0xf5, 0x71, 0x63, 0x64, 0x64, 0x64, 0x80,
	0x01, 0x46, 0x06, 0x66, 0x06, 0x04, 0x8f, 0x81, 0xa1, 0x45, 0x08,
	0x42, 0x9b, 0x80, 0x49, 0x0d, 0x06, 0x19, 0x06, 0x49, 0xb0, 0xbc,
	0x18, 0x58, 0x2d, 0x03, 0x83, 0x38, 0x03, 0x2a, 0x08, 0x6b, 0x7e,
	0x23, 0xd1, 0x5d, 0xa2, 0xa2, 0xd0, 0xed, 0xc6, 0xd3, 0x7a, 0xa0,
	0x44, 0xb3, 0x9b, 0xad, 0xdb, 0x47, 0x45, 0xa3, 0x3b, 0x44, 0x45,
	0xa5, 0xd3, 0x44, 0xa5, 0xd3, 0x47, 0x85, 0xa3, 0x33, 0x44, 0x85,
	0xe5, 0x7f, 0x00, 0xcf, 0x71, 0x37, 0x1e, 0x90, 0xea, 0xe6, 0x23,
	0x12, 0x71, 0x87, 0x27, 0xf4, 0x96, 0xa8, 0x31, 0x74, 0xfb, 0x71,
	0x74, 0xb3, 0x81, 0x14, 0x74, 0x87, 0xb1, 0x80, 0x94, 0x82, 0x95,
	0xb1, 0xb4, 0x1e, 0x28, 0xbd, 0x03, 0x54, 0x0a, 0xb2, 0xe8, 0xf5,
	0x16, 0x88, 0x3a, 0xa0, 0x84, 0xe1, 0x81, 0x17, 0x7f, 0xfe, 0xff,
	0xff, 0xdf, 0x78, 0x90, 0x09, 0x28, 0xde, 0x7a, 0xa9, 0x94, 0xb3,
	0xbb, 0x11, 0x64, 0x58, 0xb7, 0x83, 0xc4, 0xe7, 0xc3, 0xcd, 0x6f,
	0x64, 0x3a, 0x4b, 0x54, 0xc0, 0x4e, 0xe8, 0x8c, 0x51, 0x11, 0x81,
	0x28, 0x3c, 0x0c, 0x52, 0xd8, 0x2d, 0x06, 0x34, 0xf7, 0x7f, 0x90,
	0x40, 0xb7, 0x1b, 0x4b, 0x27, 0x8b, 0x0a, 0x58, 0x02, 0xa8, 0x92,
	0xe5, 0x38, 0x8b, 0x8a, 0x08, 0x50, 0x16, 0xcc, 0xef, 0x06, 0xea,
	0x00, 0xea, 0x94, 0x68, 0x3e, 0x22, 0x73, 0xb8, 0x77, 0x8b, 0x1a,
	0xd8, 0x85, 0x40, 0xf3, 0x50, 0xcd, 0x01, 0x19, 0x8f, 0xa2, 0xc9,
	0x47, 0x45, 0xa1, 0xf5, 0x64, 0xe7, 0xb1, 0x52, 0x95, 0xee, 0x66,
	0x06, 0x06, 0x5e, 0x2e, 0x00, 0xc6, 0xa4, 0x67, 0x16
};

const uint8_t incompressible_zlib6[] = {
	0x78, 0x9c, 0x01, 0x00, 0x01, 0xff, 0xfe, 0x41, 0xbc, 0x59, 0x08,
	0xa3, 0xc7, 0xd2, 0xfe, 0x9a, 0x0a, 0x0f, 0x5c, 0xfd, 0x3a, 0xe4,
	0xa4, 0x83, 0x66, 0x7b, 0x96, 0xd2, 0x6d, 0x88, 0x68, 0xd3, 0xf6,
	0x1d, 0x59, 0x92, 0xe9, 0xa0, 0x8b, 0x92, 0xb9, 0xf5, 0x1a, 0x3f,
	0x3c, 0x07, 0xba, 0x1a, 0x02, 0x24, 0xf8, 0xaf, 0x6a, 0x61, 0x73,
	0x2d, 0x65, 0x7a, 0xfd, 0x43, 0x15, 0xe9, 0xea, 0x2e, 0xaf, 0xe6,
	0x6e, 0x92, 0xf0, 0xb4, 0x0e, 0x60, 0x14, 0xd7, 0xde, 0xd9, 0x6b,
	0x7f, 0x88, 0x85, 0x99, 0x37, 0xe0, 0x93, 0x2a, 0x46, 0x7b, 0xd1,
	0xc7, 0x00, 0xb5, 0xa3, 0x3d, 0xad, 0xc3, 0x0f, 0x1c, 0xda, 0x42,
	0x06, 0x09, 0x2b, 0x79, 0xca, 0x9e, 0xa1, 0xea, 0xc7, 0x1f, 0x0b,
	0x3c, 0x76, 0x01, 0xc5, 0x1f, 0x73, 0x8d, 0xdd, 0x37, 0x49, 0x62,
	0xdb, 0x44, 0xe5, 0x92, 0x83, 0xf5, 0x64, 0x14, 0x1b, 0xcc, 0xc9,
	0xeb, 0x00, 0x4b, 0x83, 0xd6, 0xf8, 0xe3, 0xa9, 0xc8, 0x86, 0x05,
	0x53, 0x85, 0xc4, 0xf1, 0x02, 0x62, 0x78, 0xb8, 0x8d, 0xeb, 0x8c,
	0x70, 0x13, 0x3d, 0xbb, 0x33, 0xf4, 0x86, 0xe0, 0xe7, 0x01, 0xc3,
	0x07, 0x01, 0x34, 0xe0, 0x51, 0x24, 0x1b, 0x56, 0x2c, 0x0a, 0x47,
	0x63, 0xb6, 0xe5, 0xbf, 0x3a, 0x8a, 0x74, 0x35, 0x69, 0xcd, 0x03,
	0x8b, 0xc6, 0x2d, 0x64, 0x51, 0x7c, 0xfb, 0x4c, 0x0c, 0x23, 0xf1,
	0x3d, 0xd8, 0x08, 0x52, 0x5a, 0x32, 0xde, 0x45, 0x2c, 0xb4, 0x23,
	0x4f, 0xe8, 0x0c, 0x06, 0xd3, 0xc7, 0x44, 0x48, 0xc2, 0xec, 0x05,
	0x2b, 0x87, 0x63, 0x0e, 0xdc, 0x3f, 0xa1, 0x5e, 0x95, 0x55, 0xd4,
	0x3e, 0xfa, 0xbc, 0xad, 0x56, 0x1f, 0x27, 0x16, 0x7d, 0x29, 0xa3,
	0xb9, 0xc9, 0x39, 0x0f, 0x33, 0x26, 0xfd, 0x0a, 0x2c, 0xf9, 0xd7,
	0xfd, 0x65, 0x81, 0x00, 0xa3, 0x14, 0x21, 0x74, 0xdb, 0xba, 0x2f,
	0xb2, 0x7a, 0x01
};

#define ARR(name) name, sizeof(name)

struct compress_test zlib_compress_vectors[] = {
	{6,
	 ARR(compressible_plain),
	 ARR(compressible_zlib6)},
	{6,
	 ARR(incompressible_plain),
	 ARR(incompressible_zlib6)}
};

#undef ARR
