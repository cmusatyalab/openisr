#!/bin/sh
### BEGIN INIT INFO
# Provides:		openisr
# Required-Start:	$local_fs $remote_fs
# Required-Stop:	$local_fs $remote_fs
# Default-Start:	S
# Default-Stop:		
# Short-Description:	Load kernel modules for the OpenISR system
# Description:		Load kernel modules for the OpenISR system
### END INIT INFO
# chkconfig: 2345 20 20
# description: Load kernel modules for the OpenISR system

PATH=/sbin:/usr/sbin:/bin:/usr/bin
LIBDIR=!!LIBDIR!!
SCRIPTNAME=/etc/init.d/openisr

# Don't run if the package is no longer installed
[ -d $LIBDIR ] || exit 0

get_mod_arch() {
	case `uname -m` in
		i586|i686)
			echo "i586"
			;;
		x86_64)
			echo "x86_64"
			;;
		*)
			echo "none"
			;;
	esac
}

probe_module() {
	local name="$1"
	local direction="$2"
	local required="$3"
	
	[ "$direction" = "remove" ] && flags="-r" || flags=""
	if modprobe $flags "$name" 2>/dev/null ; then
		echo -n " $name"
	elif [ "$required" = "required" ] ; then
		if [ "$direction" = "remove" ] ; then
			# We might be here because modprobe has never heard
			# of this module, even though it isn't loaded.  Call
			# this success.
			lsmod | grep -q "^$name " || return 0
		fi
		echo -n " failed"
		return 1
	fi
	return 0
}

status_module() {
	local name="$1"
	local builtin_file="$2"
	local ret

	if lsmod | grep -q "^$name " ; then
		result="Loaded"
		ret=0
	elif [ -n "$builtin_file" ] && grep -q "$name" $builtin_file ; then
		result="Built-in"
		ret=0
	else
		result="Unloaded"
		ret=1
	fi
	printf "Module %-10s: %s\n" "$name" "$result"
	return $ret
}

do_start() {
	local ret=0
	
	echo -n "Loading OpenISR kernel modules:"
	if probe_module openisr insert required
	then
		probe_module loop insert
		[ "$arch" != "none" ] && probe_module "aes-$arch" insert
		[ "$arch" != "none" ] && probe_module "sha1-$arch" insert
	else
		ret=1
	fi
	echo "."
	return $ret
}

do_stop() {
	local ret=0
	
	echo -n "Unloading OpenISR kernel modules:"
	if probe_module openisr remove required
	then
		probe_module loop remove
		[ "$arch" != "none" ] && probe_module "aes-$arch" remove
		[ "$arch" != "none" ] && probe_module "sha1-$arch" remove
	else
		ret=1
	fi
	echo "."
	return $ret
}

do_status() {
	local ret=0
	
	status_module openisr || ret=1
	status_module loop /proc/devices || ret=1
	[ "$arch" != "none" ] && status_module "aes_$arch" /proc/crypto
	[ "$arch" != "none" ] && status_module "sha1_$arch" /proc/crypto
	return $ret
}

arch=`get_mod_arch`
case "$1" in
	start)
		do_start || exit 1
		;;
	stop)
		do_stop || exit 1
		;;
	restart|force-reload)
		do_stop || exit 1
		do_start || exit 1
		;;
	status)
		do_status || exit 3
		;;
	*)
		echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload|status}" >&2
		exit 1
		;;
esac
