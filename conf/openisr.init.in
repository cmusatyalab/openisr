#!/bin/sh
### BEGIN INIT INFO
# Provides:		openisr
# Required-Start:	$local_fs $remote_fs
# Required-Stop:	$local_fs $remote_fs
# Default-Start:	S
# Short-Description:	Load kernel modules for the OpenISR system
### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin
LIBDIR=!!LIBDIR!!
SCRIPTNAME=/etc/init.d/openisr

# Don't run if the package is no longer installed
[ -d $LIBDIR ] || exit 0

get_mod_arch() {
	case `uname -m` in
		i586|i686)
			echo "i586"
			;;
		x86_64)
			echo "x86_64"
			;;
		*)
			echo "none"
			;;
	esac
}

probe_module() {
	name="$1"
	direction="$2"
	required="$3"
	
	[ "$direction" = "remove" ] && flags="-r" || flags=""
	if modprobe $flags "$name" 2>/dev/null ; then
		echo -n " $name"
	elif [ "$required" = "required" ] ; then
		echo -n " failed"
		return 1
	fi
	return 0
}

do_start() {
	arch=`get_mod_arch`
	ret=0
	
	echo -n "Loading OpenISR kernel modules:"
	probe_module loop insert
	if probe_module openisr insert required
	then
		[ "$arch" != "none" ] && probe_module "aes-$arch" insert
		[ "$arch" != "none" ] && probe_module "sha1-$arch" insert
	else
		ret=1
	fi
	echo "."
	return $ret
}

do_stop() {
	arch=`get_mod_arch`
	ret=0
	
	echo -n "Unloading OpenISR kernel modules:"
	[ "$arch" != "none" ] && probe_module "sha1-$arch" remove
	[ "$arch" != "none" ] && probe_module "aes-$arch" remove
	if probe_module openisr remove required
	then
		probe_module loop remove
	else
		ret=1
	fi
	echo "."
	return $ret
}

case "$1" in
	start)
		do_start || exit 1
		;;
	stop)
		do_stop || exit 1
		;;
	restart|force-reload)
		do_stop || exit 1
		do_start || exit 1
		;;
	*)
		echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
		exit 1
		;;
esac
