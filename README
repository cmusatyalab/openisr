This is the OpenISR (TM) system, release 0.8.2.  For more information on
the OpenISR system and Internet Suspend/Resume (R), please visit our website at
<http://isr.cmu.edu>.

REQUIREMENTS
------------

- Linux kernel (versions 2.6.8 through 2.6.22 supported)
- curl >= 7.12.3
- Perl
- udev
- ssh
- rsync
- VMware or VMware Player (other VMMs to follow)
- An accessible ISR server

This release requires a (slightly modified) ISR-3 server.  Future releases will
include a completely new server implementation.

The OpenISR system has not been tested on architectures other than 32-bit x86.

INSTALLATION SUMMARY
--------------------

./configure --sysconfdir=/etc
make
make install

CONFIGURE OPTIONS
-----------------

Aside from the standard options, the OpenISR configure script supports the
following command line options:

--with-kernel=DIR
--with-ssl=DIR
--with-zlib=DIR
--with-curl=DIR
	Specifies an additional search path for, respectively, the kernel
	source, OpenSSL, zlib, or curl.  In addition to the specified paths,
	configure will check a set of default paths for each component.

--disable-client
	Do not build components that are only used by the OpenISR client.
	
--enable-libvdisk
--disable-libvdisk
	Do, or do not, build and install the libvdisk LD_PRELOAD library.  The
	default is to build and install libvdisk unless --disable-client is
	specified.  libvdisk is installed setuid root so that it can be
	preloaded into virtual machine monitors that are themselves setuid
	root.  Due to the LD_PRELOAD rules for setuid programs, libvdisk is
	always installed in DESTDIR/usr/lib regardless of the setting of
	libdir.  See the ld.so(8) man page for details on the LD_PRELOAD
	setuid rules.

--enable-modules
--disable-modules
	Do, or do not, build and install the OpenISR kernel modules.  The
	default is to build and install these modules unless --disable-client
	is specified.  If --with-kernel=DIR is specified, the modules are built
	against the configured kernel source tree specified by DIR; otherwise,
	configure attempts to locate the source tree corresponding to the
	running kernel.  If you are using a kernel provided by your Linux
	distribution, you must install the kernel-headers package corresponding
	to that kernel or the modules will not build successfully.  The OpenISR
	kernel modules must be loaded for the client to function.

CONFIGURING YOUR KERNEL
-----------------------

The default kernels provided by most Linux distributions should be able to
support the OpenISR kernel modules.  In order to build the modules, you must
have the kernel headers corresponding to your running kernel.  Most
distributions provide these headers in a "kernel-headers" package separate
from the package containing the kernel itself.

If you compile your own kernels, you must enable the following options (either
built-in or as modules) in order to use the OpenISR system:

- Cryptographic API (CONFIG_CRYPTO)
- Blowfish cipher (CONFIG_CRYPTO_BLOWFISH)
- SHA-1 hash, for architectures other than x86 and x86-64 (CONFIG_CRYPTO_SHA1)
- CBC support, for kernels > 2.6.18 (CONFIG_CRYPTO_CBC)
- Loopback block device (CONFIG_BLK_DEV_LOOP)
- zlib compression (CONFIG_ZLIB_DEFLATE and CONFIG_ZLIB_INFLATE)

zlib is a hidden option which cannot be selected directly from the
configuration menus.  The easiest way to enable it is to enable "Deflate
compression algorithm" under "Cryptographic options" (CONFIG_CRYPTO_DEFLATE).

If you are using kernel 2.6.15 or older, and the SHA-1 CryptoAPI module is
compiled into your kernel (CONFIG_CRYPTO_SHA1=y), you will not be able to load
the SHA1 Accelerator.  The OpenISR system will still work, but you will receive
reduced performance.

INSTALLATION PATHS
------------------

"make install" will install several components outside the directories
specified on the configure command line.  Kernel modules will always be
installed in the /lib/modules subdirectory corresponding to the kernel
source you chose.  libvdisk will always be installed in /usr/lib and marked
setuid root; see the documentation on --disable-libvdisk (above) for details.
If the --disable-libvdisk and --disable-modules options are both passed to
configure, files will be installed only in the configured directories.

By default, the OpenISR init script and udev rules are installed in
subdirectories of $prefix/etc.  However, most systems only look for these
files in subdirectories of /etc.  To solve this problem, you can pass
"--sysconfdir=/etc" to configure, or you can move the files into /etc by hand.

During the build process, several pieces of the OpenISR system are configured
to expect helper programs and data files in the locations specified to
configure.  However, it is possible to install the OpenISR system to a
different directory, though ISR will not work if it is run directly from
there.  (You might want to do this while building a binary package, for
example.)  To install to an alternate directory, set the DESTDIR environment
variable to its absolute path when running "make install".

POST-INSTALLATION
-----------------

If you install the OpenISR system from source, you should perform several
additional steps to complete the installation:

- Run "ldconfig; depmod" as root

- Configure your system to start the "openisr" init script at boot, probably
in the "S" runlevel

- Ensure that any users who will run OpenISR have read and write access to
the /dev/loopN devices

- Run "/etc/init.d/openisr start" to load the kernel modules

COMPONENTS AND THEIR LICENSES
-----------------------------

The OpenISR client is composed of several components, licensed under several
different software licenses.  Here is a short summary of each component:

User interface
	This consists of the "isr" command plus associated Perl modules, and
	is licensed under the Eclipse Public License, version 1.0.  The code
	for this component can be found in the "client" directory of the source
	tree.

Vulpes
	This is the userspace half of the virtual disk provided by the OpenISR
	system to guest VMs.  It is responsible for runtime communication with
	the content server, maintenance of the parcel keyring, and various
	maintenance tasks.  Vulpes is launched by the user interface code when
	necessary; most users will never need to start it directly.  Vulpes is
	licensed under the Eclipse Public License, version 1.0.

libvdisk
	This is a small LD_PRELOAD shim which works around restrictions placed
	by some virtual machine monitors on the names and properties of block
	devices that are accessed from within a virtual machine.  It is only
	necessary when such a VMM is in use; the list of such VMMs currently
	includes VMware and VMware Player.  libvdisk is licensed under the
	Eclipse Public License, version 1.0.

Nexus
	This is the kernel half of the virtual disk.  Nexus exports virtual
	block devices to userspace upon request, performs chunking and
	encryption, and exchanges keys with the userspace component.  Nexus
	is licensed under version 2 of the GNU General Public License.

SHA-1 Accelerator
	This is an assembly-language implementation of the SHA-1 hash
	algorithm, built as a loadable module for the Linux kernel's
	Cryptographic API.  Implementations exist for the i586 and x86-64
	architectures; the SHA-1 Accelerator will not be built on other
	platforms.  Nexus will use the SHA-1 Accelerator to improve hashing
	performance if it is available; otherwise, it will use the kernel's
	built-in SHA-1 implementation at reduced performance.  This component
	is licensed under version 2.1 of the GNU Lesser General Public License
	and can be found in the "sha1" directory of the source tree.

ACKNOWLEDGMENTS
----------------

Internet Suspend/Resume is a registered trademark and OpenISR is a trademark
of Carnegie Mellon University.  All other trademarks are the property of their
respective owners.
