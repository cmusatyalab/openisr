#!/usr/bin/perl
#
# openisr-config - script to build and install the kernel modules for the
#                  OpenISR (R) system
#
# Copyright (C) 2007 Carnegie Mellon University
#
# This software is distributed under the terms of the Eclipse Public License,
# Version 1.0 which can be found in the file named LICENSE.Eclipse.  ANY USE,
# REPRODUCTION OR DISTRIBUTION OF THIS SOFTWARE CONSTITUTES RECIPIENT'S
# ACCEPTANCE OF THIS AGREEMENT

use strict;
use warnings;
use File::Temp qw/tempdir/;
use Term::ANSIColor;
use constant {
	SRC => "/usr/share/openisr/openisr.tar.gz",
	INITSCRIPT => "/etc/init.d/openisr",
	VERSION => "0.8.4",
};

sub fail ($) {
	my $msg = shift;

	print colored("Failed: $msg", "red") . "\n";
	exit 1;
}

sub warning ($) {
	my $msg = shift;
	
	print colored("Warning: $msg", "yellow") . "\n";
}

sub status ($) {
	my $msg = shift;
	
	print colored($msg, "green") . "\n";
}

my $topdir;
my @files;
my $subdir;

status "Building kernel modules for OpenISR " . VERSION . ".";
print "\n";
fail "You must be root." if $> != 0;

status "Unloading kernel modules...";
system(INITSCRIPT . " stop") == 0
	or fail "Couldn't unload kernel modules.\nPlease suspend any " .
				"running parcels and try again.";

#TODO: check to see if modules are already built
# (this is not a very robust test)

status "Checking status of kernel modules.";

if (system("dkms status | grep openisr | grep " . VERSION . " | grep installed") == 0) {
	status "Modules for this version are already built and installed.\n";
} else {
	if (system("dkms status | grep openisr | grep " . VERSION . " | grep built") == 0)
	{
		status "Modules already built with DKMS.\n";
	} else {
	status "Building modules with DKMS.";
	system("dkms build -m openisr -v " . VERSION) == 0
		or fail "DKMS build failed.";
	}

	status "Installing modules with DKMS.";
	system("dkms install -m openisr -v " . VERSION) == 0
		or fail "DKMS install failed.";
}

status "Loading kernel modules...";
system(INITSCRIPT . " start") == 0
	or fail "Couldn't load kernel modules";

print "\n";
status "Successfully installed OpenISR kernel modules.  Please ensure that\n" .
	INITSCRIPT . " is configured to run at boot.";
exit 0;
