#!!!PERLPATH!!
#
# openisr-config - script to build and install the kernel modules for the
#                  OpenISR (R) system
#
# Copyright (C) 2007-2008 Carnegie Mellon University
#
# This software is distributed under the terms of the Eclipse Public License,
# Version 1.0 which can be found in the file named LICENSE.Eclipse.  ANY USE,
# REPRODUCTION OR DISTRIBUTION OF THIS SOFTWARE CONSTITUTES RECIPIENT'S
# ACCEPTANCE OF THIS AGREEMENT

use strict;
use warnings;
use Term::ANSIColor;
use constant {
	SHAREDIR => "!!SHAREDIR!!",
	INITSCRIPT => "!!INITDIR!!/openisr",
	VERSION => "!!VERSION!!",
};

our $warn_initscript;

sub fail ($) {
	my $msg = shift;

	print colored("Failed: $msg", "red") . "\n";
	exit 1;
}

sub warning ($) {
	my $msg = shift;

	print colored("Warning: $msg", "yellow") . "\n";
}

sub status ($) {
	my $msg = shift;

	print colored($msg, "green") . "\n";
}


unless (do (SHAREDIR . "/modbuild.pm")) {
	if ($@) {
		fail "Couldn't parse modbuild.pm: $@";
	} else {
		fail "Couldn't load modbuild.pm: $!";
	}
}

status "Building kernel modules for OpenISR " . VERSION . ".";
print "\n";
fail "You must be root." if $> != 0;

status "Unloading kernel modules...";
system(INITSCRIPT . " stop") == 0
	or fail "Couldn't unload kernel modules.\nPlease suspend any " .
				"running parcels and try again.";

# The "build" function is defined by modbuild.pm
build();

status "Loading kernel modules...";
system(INITSCRIPT . " start") == 0
	or fail "Couldn't load kernel modules";

print "\n";
if ($warn_initscript) {
	status "Successfully installed OpenISR kernel modules.  Please " .
			"ensure that\n" . INITSCRIPT . " is configured " .
			"to run at boot.";
} else {
	status "Successfully installed OpenISR kernel modules.";
}
exit 0;
